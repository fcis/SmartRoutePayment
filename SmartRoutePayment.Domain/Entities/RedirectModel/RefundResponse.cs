using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SmartRoutePayment.Domain.Entities.RedirectModel
{
    /// <summary>
    /// Response entity for Transaction Refund
    /// Received from SmartRoute after refund request
    /// </summary>
    public class RefundResponse
    {
        /// <summary>
        /// Response status code from SmartRoute
        /// Covers errors generated by SmartRoute
        /// </summary>
        public string StatusCode { get; set; } = string.Empty;

        /// <summary>
        /// Message describing the response status
        /// UTF-8 encoded
        /// </summary>
        public string StatusDescription { get; set; } = string.Empty;

        /// <summary>
        /// Refund amount
        /// </summary>
        public string Amount { get; set; } = string.Empty;

        /// <summary>
        /// ISO formatted currency code (numeric)
        /// </summary>
        public string CurrencyIsoCode { get; set; } = string.Empty;

        /// <summary>
        /// Unique Merchant ID
        /// </summary>
        public string MerchantId { get; set; } = string.Empty;

        /// <summary>
        /// Refund transaction identifier
        /// </summary>
        public string TransactionId { get; set; } = string.Empty;

        /// <summary>
        /// Sub-PUN/sub-Transaction that was refunded (if provided)
        /// </summary>
        public string? SubPun { get; set; }

        /// <summary>
        /// Message ID (should be "4" for refund response)
        /// </summary>
        public string MessageId { get; set; } = string.Empty;

        /// <summary>
        /// Secure hash for response validation
        /// </summary>
        public string SecureHash { get; set; } = string.Empty;

        /// <summary>
        /// Original transaction ID that was refunded
        /// </summary>
        public string OriginalTransactionId { get; set; } = string.Empty;

        /// <summary>
        /// Receipt Reference Number
        /// </summary>
        public string? Rrn { get; set; }

        /// <summary>
        /// Indicates if refund was successful
        /// </summary>
        public bool IsSuccess { get; set; }

        /// <summary>
        /// Error message (if any)
        /// </summary>
        public string ErrorMessage { get; set; } = string.Empty;

        /// <summary>
        /// Timestamp when response was processed
        /// </summary>
        public DateTime ProcessedAt { get; set; } = DateTime.UtcNow;
    }
}
