using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SmartRoutePayment.Domain.Entities.RedirectModel
{
    /// <summary>
    /// Request entity for Transaction Refund (B2B API Communication Model)
    /// Used to refund a specific transaction partially or fully
    /// </summary>
    public class RefundRequest
    {
        /// <summary>
        /// MessageID = 4 for Transaction Refund
        /// </summary>
        public string MessageId { get; set; } = "4";

        /// <summary>
        /// Unique transaction identifier for this refund
        /// Generated by merchant, alphanumeric, no special characters or spaces
        /// </summary>
        public string TransactionId { get; set; } = string.Empty;

        /// <summary>
        /// Sub-PUN/sub-Transaction that needs to be refunded (optional)
        /// </summary>
        public string? SubPun { get; set; }

        /// <summary>
        /// Unique Merchant ID at SmartRoute
        /// </summary>
        public string MerchantId { get; set; } = string.Empty;

        /// <summary>
        /// ISO formatted currency code (numeric)
        /// Example: 840 for USD, 682 for SAR
        /// </summary>
        public string CurrencyIsoCode { get; set; } = string.Empty;

        /// <summary>
        /// Refund amount (ISO formatted with no decimal point)
        /// Example: 100 for 1.00 USD
        /// For partial refund: less than original amount
        /// For full refund: equal to original amount
        /// </summary>
        public string Amount { get; set; } = string.Empty;

        /// <summary>
        /// Command version (default: 1.0)
        /// </summary>
        public string Version { get; set; } = "1.0";

        /// <summary>
        /// Transaction ID of the original transaction to refund
        /// </summary>
        public string OriginalTransactionId { get; set; } = string.Empty;

        /// <summary>
        /// Secure hash using SHA-256
        /// </summary>
        public string SecureHash { get; set; } = string.Empty;
    }
}
